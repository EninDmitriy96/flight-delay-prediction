USE team21_projectdb;

DROP TABLE IF EXISTS flights_optimized;

CREATE EXTERNAL TABLE flights_optimized (
    FL_DATE STRING,
    AIRLINE_CODE STRING,
    DOT_CODE INT,
    FL_NUMBER INT,
    ORIGIN_CITY STRING,
    DEST STRING,
    DEST_CITY STRING,
    CRS_DEP_TIME INT,
    DEP_TIME FLOAT,
    DEP_DELAY FLOAT,
    TAXI_OUT FLOAT,
    WHEELS_OFF FLOAT,
    WHEELS_ON FLOAT,
    TAXI_IN FLOAT,
    CRS_ARR_TIME INT,
    ARR_TIME FLOAT,
    ARR_DELAY FLOAT,
    CANCELLED FLOAT,
    CANCELLATION_CODE STRING,
    DIVERTED FLOAT,
    CRS_ELAPSED_TIME FLOAT,
    ELAPSED_TIME FLOAT,
    AIR_TIME FLOAT,
    DISTANCE FLOAT,
    DELAY_DUE_CARRIER FLOAT,
    DELAY_DUE_WEATHER FLOAT,
    DELAY_DUE_NAS FLOAT,
    DELAY_DUE_SECURITY FLOAT,
    DELAY_DUE_LATE_AIRCRAFT FLOAT
)
PARTITIONED BY (ORIGIN STRING)
CLUSTERED BY (FL_NUMBER) INTO 10 BUCKETS
STORED AS PARQUET
LOCATION '/user/team21/project/hive/warehouse/flights_optimized';

SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

INSERT OVERWRITE TABLE flights_optimized
PARTITION (ORIGIN)
SELECT 
    FL_DATE, AIRLINE_CODE, DOT_CODE, FL_NUMBER, ORIGIN_CITY, 
    DEST, DEST_CITY, CRS_DEP_TIME, DEP_TIME, DEP_DELAY, TAXI_OUT, 
    WHEELS_OFF, WHEELS_ON, TAXI_IN, CRS_ARR_TIME, ARR_TIME, ARR_DELAY, 
    CANCELLED, CANCELLATION_CODE, DIVERTED, CRS_ELAPSED_TIME, ELAPSED_TIME, 
    AIR_TIME, DISTANCE, DELAY_DUE_CARRIER, DELAY_DUE_WEATHER, DELAY_DUE_NAS, 
    DELAY_DUE_SECURITY, DELAY_DUE_LATE_AIRCRAFT, ORIGIN
FROM flights;

SELECT 'Optimized table created with ' || COUNT(*) || ' records.' AS message FROM flights_optimized;
SHOW PARTITIONS flights_optimized;